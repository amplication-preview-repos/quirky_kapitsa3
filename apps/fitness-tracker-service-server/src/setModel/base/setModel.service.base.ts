/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SetModel as PrismaSetModel } from "@prisma/client";

export class SetModelServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SetModelCountArgs, "select">): Promise<number> {
    return this.prisma.setModel.count(args);
  }

  async setModels(
    args: Prisma.SetModelFindManyArgs
  ): Promise<PrismaSetModel[]> {
    return this.prisma.setModel.findMany(args);
  }
  async setModel(
    args: Prisma.SetModelFindUniqueArgs
  ): Promise<PrismaSetModel | null> {
    return this.prisma.setModel.findUnique(args);
  }
  async createSetModel(
    args: Prisma.SetModelCreateArgs
  ): Promise<PrismaSetModel> {
    return this.prisma.setModel.create(args);
  }
  async updateSetModel(
    args: Prisma.SetModelUpdateArgs
  ): Promise<PrismaSetModel> {
    return this.prisma.setModel.update(args);
  }
  async deleteSetModel(
    args: Prisma.SetModelDeleteArgs
  ): Promise<PrismaSetModel> {
    return this.prisma.setModel.delete(args);
  }
}
